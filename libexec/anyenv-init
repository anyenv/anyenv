#!/usr/bin/env bash
# Summary: Configure the shell environment for anyenv
# Usage: eval "$(anyenv init - [<shell>])"

set -e
[ -n "$ANYENV_DEBUG" ] && set -x

print=""
no_rehash=1
for args in "$@"
do
  if [ "$args" = "-" ]; then
    print=1
    shift
  fi
done

shell="$1"
if [ -z "$shell" ]; then
  shell="$(basename "$SHELL")"
fi

READLINK=$(type -p greadlink readlink | head -1)
if [ -z "$READLINK" ]; then
  echo "anyenv: cannot find readlink - are you missing GNU coreutils?" >&2
  exit 1
fi

resolve_link() {
  $READLINK "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

root="$(abs_dirname "$0")/.."

if [ -z "$print" ]; then
  case "$shell" in
  bash )
    profile='~/.bash_profile'
    ;;
  zsh )
    profile='~/.zshrc'
    ;;
  ksh )
    profile='~/.profile'
    ;;
  * )
    profile='your profile'
    ;;
  esac

  { echo "# Load anyenv automatically by adding"
    echo "# the following to ${profile}:"
    echo
    echo 'eval "$(anyenv init -)"'
    echo
  } >&2

  exit 1
fi

mkdir -p "${ANYENV_ROOT}/envs"

case "$shell" in
bash | zsh )
  echo "source \"$root/completions/anyenv.${shell}\""
  ;;
esac

cat <<EOS
anyenv() {
  typeset command
  command="\$1"
  if [ "\$#" -gt 0 ]; then
    shift
  fi
  command anyenv "\$command" "\$@"
}
EOS

ANYENV_ADD_PATH=""

for env in $(anyenv-envs); do
  ENV_ROOT_VALUE=$(echo ${env}_ROOT | tr "[a-z]" "[A-Z]")
  ENV_ROOT="${ANYENV_ROOT}/envs/${env}"
  ANYENV_ADD_PATH="${ENV_ROOT}/bin:${ENV_ROOT}/shims:${ANYENV_ADD_PATH}"
  echo "export ${ENV_ROOT_VALUE}=\"${ENV_ROOT}\""
  export ${ENV_ROOT_VALUE}="${ENV_ROOT}"
  echo "$(${ENV_ROOT}/bin/${env} init - ${shell})"
done

if ! [ -z "$ANYENV_ADD_PATH" ]; then
  echo "export PATH=\"${ANYENV_ADD_PATH}\${PATH}\""
fi
